The core Concepts of boto3 are:- 
    > Session
    > Resource
    > Client
    > Meta
    > Collections
    > Waiters
    > Paginators

> Session:
    > It is an AWS Management console in our terms
    > Session stores configuration informations(primarily credentials)
    > Allows users to create Service_Clients and Resources.
    > Also boto3 creates a default session for us when needed.

> Resource and Client:
  > We can create particular AWS Service Console like iam console, ec2 console, sns console... etc. by using
  session_objects.
    eg: iam_con=aws_mang_con_root.resource(service_name='iam',region='us-east-1')
        iam_con=aws_mang_con_root.client(service_name='iam',region='us-east-1')
    > Resource is a high-level objet-oriented service access and it is available for some of the aws services.
       (o/p can be performed by using '.' operations)
    > Client is a low-level service access.(o/p is directory)

> Waiters :
    > A way to block until a certain state has been reached for any required aws serice.
   
> Meta :
    > Boto3 meta object is useful to enter into client object from resource object.

> Collections :
    > Boto3 Collections are useful to collect group of resources informations   
  
> Paginators:-
    > paginators plays a role when we use boto3 to query AWS resources
    > Like get all ec2_instances, iam users, buckets, objects etc..
    > For query, API calls made to AWS through boto3
    > Generally each API class return 50 to 100 results.
       > Note: S3 returns upto 1000 results.
    > Actually each API call returns a page and each page holds from 50 to 100 results.
    > If you are trying retrive more than one page of results then you need to use paginator to issue
       multiple API requests on your behalf.
    > Boto3 provides Paginators to automatically issue multiple API requests to retrive all the pages.  